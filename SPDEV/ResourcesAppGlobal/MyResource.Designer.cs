//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Visigo.Sharepoint.FormsBasedAuthentication.ResourcesAppGlobal {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class MyResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal MyResource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Visigo.Sharepoint.FormsBasedAuthentication.ResourcesAppGlobal.MyResource", typeof(MyResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click the link in email to activate your account.
        /// </summary>
        internal static string activateYourAccount {
            get {
                return ResourceManager.GetString("activateYourAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot change password for builtIn account.
        /// </summary>
        internal static string CannotChangePasswordForBuiltInAccount {
            get {
                return ResourceManager.GetString("CannotChangePasswordForBuiltInAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following accounts are all registered with this Mailbox, choose and reset passowrd..
        /// </summary>
        internal static string ChooseTheAccountRegisteredByThisMailbox {
            get {
                return ResourceManager.GetString("ChooseTheAccountRegisteredByThisMailbox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click the link in email to get back your accounts.
        /// </summary>
        internal static string getBackAccountsLink {
            get {
                return ResourceManager.GetString("getBackAccountsLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get back accounts with email and reset passwword.
        /// </summary>
        internal static string GetBackAccountsWithEmail {
            get {
                return ResourceManager.GetString("GetBackAccountsWithEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Scan the QR with WeChat and follow the public account to get username and dynamic password. Or register an account with Email. If you do not want to register, you can sign in with user name &quot;guest&quot; and password &quot;guest&quot; .
        /// </summary>
        internal static string guest {
            get {
                return ResourceManager.GetString("guest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get back accounts with Email and reset passwword.
        /// </summary>
        internal static string IForgetMyPassword {
            get {
                return ResourceManager.GetString("IForgetMyPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please provide the Email address you used to register account, to which an Email will be sent. Follow the link in the email to reset password..
        /// </summary>
        internal static string IForgetMyPasswordUseEmailToReset {
            get {
                return ResourceManager.GetString("IForgetMyPasswordUseEmailToReset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid token in  Url query string for  account activation.
        /// </summary>
        internal static string InvalidToken {
            get {
                return ResourceManager.GetString("InvalidToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Link expired, its valid for 30 minutes since creation..
        /// </summary>
        internal static string LinkExpired {
            get {
                return ResourceManager.GetString("LinkExpired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No user registered by this Email..
        /// </summary>
        internal static string NoUserRegisteredByThisEmail {
            get {
                return ResourceManager.GetString("NoUserRegisteredByThisEmail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Register new user with Email.
        /// </summary>
        internal static string RegisterNewUser {
            get {
                return ResourceManager.GetString("RegisterNewUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please leave a valid Email address, to which an Email will be sent. (Note that the email can be treated as SPAM and moved into trash folder by email system). Click the link in the email to activate this account within 30 minutes. If the link expired, or you don&apos;t receive the email at all, you can click the &quot;I forget my password&quot; link on SignIn page to get another email to get back your account, which will also activate an account..
        /// </summary>
        internal static string SendEmailToActivateAccount {
            get {
                return ResourceManager.GetString("SendEmailToActivateAccount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WeChat Public Account backend configuration.
        /// </summary>
        internal static string WeChatConfig {
            get {
                return ResourceManager.GetString("WeChatConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to match configurations here with those in  https://mp.weixin.qq.com/.
        /// </summary>
        internal static string WeChatConfigDesc {
            get {
                return ResourceManager.GetString("WeChatConfigDesc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to FBA role name for this WeChat public account.
        /// </summary>
        internal static string WeChatPublicAccountNameAndFBARole {
            get {
                return ResourceManager.GetString("WeChatPublicAccountNameAndFBARole", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WeChat public account（AppID）.
        /// </summary>
        internal static string WeChatServiceAppID {
            get {
                return ResourceManager.GetString("WeChatServiceAppID", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WeChat Service EncodingAESKey.
        /// </summary>
        internal static string WeChatServiceEncodingAESKey {
            get {
                return ResourceManager.GetString("WeChatServiceEncodingAESKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WeChat Service Token.
        /// </summary>
        internal static string WeChatServiceToken {
            get {
                return ResourceManager.GetString("WeChatServiceToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WeChat Service Url.
        /// </summary>
        internal static string WeChatServiceUrl {
            get {
                return ResourceManager.GetString("WeChatServiceUrl", resourceCulture);
            }
        }
    }
}
